name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: '**/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run tests with coverage
        run: pnpm nx run api:test -- --coverage

  sonar:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: '**/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectBaseDir: .

  build:
    name: Build app
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: '**/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build with Nx
        run: pnpm nx build api
      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: error

  docker:
    name: Docker build & push
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend-cloudrun:latest,${{ secrets.DOCKERHUB_USERNAME }}/backend-cloudrun:sha-${{ github.sha }}

  trivy:
    name: Trivy security scan
    runs-on: ubuntu-latest
    needs: docker
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build image for scan (locally only)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: app:scan-candidate
      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: app:scan-candidate
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          exit-code: '0'
          format: sarif
          output: trivy-image.sarif
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-image.sarif

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: trivy
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy backend-cloudrun \
            --image=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/backend-cloudrun:latest \
            --region=europe-west1 \
            --platform=managed \
            --allow-unauthenticated
